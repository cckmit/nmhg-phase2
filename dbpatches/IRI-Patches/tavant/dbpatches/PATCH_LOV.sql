--Purpose    : PATCH FOR CHANGING INHERITANCE TYPE OF LOV.NOW ALL LOVs ARE STORED IN A SINGLE  TABLE WITH A DISCRIMINATOR
--Author     : Shraddha Nanda
--Created On : 28-JUL-08

CREATE TABLE LIST_OF_VALUES
(
  TYPE 		 		   VARCHAR2(50),
  CODE                 VARCHAR2(255 CHAR)       NOT NULL,
  DESCRIPTION          VARCHAR2(255 CHAR),
  STATE                VARCHAR2(255 CHAR),
  VERSION              NUMBER(10)               NOT NULL,
  D_CREATED_ON         DATE,
  D_INTERNAL_COMMENTS  VARCHAR2(255 CHAR),
  D_UPDATED_ON         DATE,
  D_LAST_UPDATED_BY    NUMBER(19),
  ID                   NUMBER(19),
  BUSINESS_UNIT_INFO   VARCHAR2(255 CHAR),
  D_CREATED_TIME TIMESTAMP,
  D_UPDATED_TIME TIMESTAMP,
  CONSTRAINT LIST_OF_VALUES_PK PRIMARY KEY(ID)  
)
/
CREATE SEQUENCE LIST_OF_VALUES_SEQ
 START WITH 261
 MAXVALUE 99999999999999999
 MINVALUE 1
 NOCYCLE
 CACHE 20
 NOORDER
/
ALTER TABLE CLAIM  DROP CONSTRAINT CLAIM_ACCEPTANCEREASON_FK 
/
ALTER TABLE CLAIM DROP CONSTRAINT CLAIM_ACCOUNTABILITYCODE_FK 
/
ALTER TABLE CLAIM DROP CONSTRAINT CLAIM_REJECTIONREASON_FK 
/
ALTER TABLE CLAIM DROP CONSTRAINT CLM_REASONFORSERVICEMGRREQ_FK 
/
ALTER TABLE RECOVERY_CLAIM DROP CONSTRAINT RECCLAIM_RECCLMACCPTREASON_FK 
/ 
ALTER TABLE RECOVERY_CLAIM DROP CONSTRAINT RECCLAIM_RECCLMREJECTREASON_FK 
/
ALTER TABLE INSPECTION_RESULT DROP CONSTRAINT INSPECTRESULT_ACCEPTREASON_FK
/
ALTER TABLE INSPECTION_RESULT DROP CONSTRAINT INSPECTRESULT_FAILUREREASON_FK
/
alter table claim add(acceptance_reason_new number(19))
/
alter table claim add(Accountability_Code_new number(19))
/
alter table claim add(rejection_reason_new number(19))
/
alter table claim add(reason_for_service_mgr_req_new number(19))
/
alter table recovery_claim add(rec_clm_accpt_reason_new number(19)) 
/
alter table recovery_claim add(rec_clm_reject_reason_new number(19))
/
alter table inspection_result add(Failure_Reason_new number(19))
/
alter table inspection_result add(Part_Acceptance_Reason_new number(19))
/
INSERT INTO LIST_OF_VALUES 

(id,TYPE,CODE,DESCRIPTION,STATE,VERSION,D_CREATED_ON,D_INTERNAL_COMMENTS,
D_UPDATED_ON,D_LAST_UPDATED_BY,BUSINESS_UNIT_INFO)  (SELECT 

List_Of_Values_SEQ.NEXTVAL,'SMRREASON',S.CODE,S.DESCRIPTION,S.STATE,S.VERSION,S.D_CREATED_ON

,S.D_INTERNAL_COMMENTS,
S.D_UPDATED_ON,S.D_LAST_UPDATED_BY,S.BUSINESS_UNIT_INFO FROM SMR_REASON S)
/
INSERT INTO LIST_OF_VALUES 

(ID,TYPE,CODE,DESCRIPTION,STATE,VERSION,D_CREATED_ON,D_INTERNAL_COMMENTS,
D_UPDATED_ON,D_LAST_UPDATED_BY,BUSINESS_UNIT_INFO)  (SELECT List_Of_Values_SEQ.NEXTVAL, 

'FAILUREREASON',S.CODE,S.DESCRIPTION,S.STATE,S.VERSION,S.D_CREATED_ON,S.D_INTERNAL_COMMENTS,
S.D_UPDATED_ON,S.D_LAST_UPDATED_BY,S.BUSINESS_UNIT_INFO FROM FAILURE_REASON S)
/
INSERT INTO LIST_OF_VALUES 

(ID,TYPE,CODE,DESCRIPTION,STATE,VERSION,D_CREATED_ON,D_INTERNAL_COMMENTS,
D_UPDATED_ON,D_LAST_UPDATED_BY,BUSINESS_UNIT_INFO)  (SELECT List_Of_Values_SEQ.NEXTVAL, 

'REJECTIONREASON',S.CODE,S.DESCRIPTION,S.STATE,S.VERSION,S.D_CREATED_ON,S.D_INTERNAL_COMMENT

S,
S.D_UPDATED_ON,S.D_LAST_UPDATED_BY,S.BUSINESS_UNIT_INFO FROM REJECTION_REASON S)
/
INSERT INTO LIST_OF_VALUES 

(ID,TYPE,CODE,DESCRIPTION,STATE,VERSION,D_CREATED_ON,D_INTERNAL_COMMENTS,
D_UPDATED_ON,D_LAST_UPDATED_BY,BUSINESS_UNIT_INFO)  (SELECT List_Of_Values_SEQ.NEXTVAL, 

'ACCEPTANCEREASON',S.CODE,S.DESCRIPTION,S.STATE,S.VERSION,S.D_CREATED_ON,S.D_INTERNAL_COMMEN

TS,
S.D_UPDATED_ON,S.D_LAST_UPDATED_BY,S.BUSINESS_UNIT_INFO FROM ACCEPTANCE_REASON S)
/
INSERT INTO LIST_OF_VALUES 

(ID,TYPE,CODE,DESCRIPTION,STATE,VERSION,D_CREATED_ON,D_INTERNAL_COMMENTS,
D_UPDATED_ON,D_LAST_UPDATED_BY,BUSINESS_UNIT_INFO)  (SELECT List_Of_Values_SEQ.NEXTVAL, 

'ACCOUNTABILITYCODE',S.CODE,S.DESCRIPTION,S.STATE,S.VERSION,S.D_CREATED_ON,S.D_INTERNAL_COMM

ENTS,
S.D_UPDATED_ON,S.D_LAST_UPDATED_BY,S.BUSINESS_UNIT_INFO FROM ACCOUNTABILITY_CODE S)
/
INSERT INTO LIST_OF_VALUES 

(ID,TYPE,CODE,DESCRIPTION,STATE,VERSION,D_CREATED_ON,D_INTERNAL_COMMENTS,
D_UPDATED_ON,D_LAST_UPDATED_BY,BUSINESS_UNIT_INFO)  (SELECT List_Of_Values_SEQ.NEXTVAL, 

'PARTACCEPTANCEREASON', 

S.CODE,S.DESCRIPTION,S.STATE,S.VERSION,S.D_CREATED_ON,S.D_INTERNAL_COMMENTS,
S.D_UPDATED_ON,S.D_LAST_UPDATED_BY,S.BUSINESS_UNIT_INFO FROM PART_ACCEPTANCE_REASON S)
/
INSERT INTO LIST_OF_VALUES 

(ID,TYPE,CODE,DESCRIPTION,STATE,VERSION,D_CREATED_ON,D_INTERNAL_COMMENTS,
D_UPDATED_ON,D_LAST_UPDATED_BY,BUSINESS_UNIT_INFO)  (SELECT List_Of_Values_SEQ.NEXTVAL, 

'RECOVERYCLAIMACCEPTANCEREASON',S.CODE,S.DESCRIPTION,S.STATE,S.VERSION,S.D_CREATED_ON,S.D_IN

TERNAL_COMMENTS,
S.D_UPDATED_ON,S.D_LAST_UPDATED_BY,S.BUSINESS_UNIT_INFO FROM REC_CLM_ACCPT_REASON S)
/
INSERT INTO LIST_OF_VALUES 

(ID,TYPE,CODE,DESCRIPTION,STATE,VERSION,D_CREATED_ON,D_INTERNAL_COMMENTS,
D_UPDATED_ON,D_LAST_UPDATED_BY,BUSINESS_UNIT_INFO)  (SELECT List_Of_Values_SEQ.NEXTVAL, 

'RECOVERYCLAIMREJECTIONREASON',S.CODE,S.DESCRIPTION,S.STATE,S.VERSION,S.D_CREATED_ON,S.D_INT

ERNAL_COMMENTS,
S.D_UPDATED_ON,S.D_LAST_UPDATED_BY,S.BUSINESS_UNIT_INFO FROM REC_CLM_REJECT_REASON S)
/
CREATE OR REPLACE PROCEDURE UPDATE_CLAIMLOVCODE_TO_LOVID AS
   REASONID   VARCHAR2 (255);

   CURSOR GETLOVID(V_CODE VARCHAR2, V_TYPE VARCHAR2) IS
   	SELECT ID
   	FROM LIST_OF_VALUES
   	WHERE TYPE = V_TYPE
	AND CODE = V_CODE;

   CURSOR CLAIM_ACCPT_RSN_REC IS
      SELECT *
      FROM CLAIM WHERE ACCEPTANCE_REASON IS NOT NULL;

   CURSOR CLAIM_REJECTION_RSN_REC IS
      SELECT *
      FROM CLAIM WHERE REJECTION_REASON IS NOT NULL;

   CURSOR CLAIM_ACC_CODE_REC IS
      SELECT *
      FROM CLAIM WHERE ACCOUNTABILITY_CODE IS NOT NULL;

   CURSOR CLAIM_SMR_REC IS
      SELECT *
      FROM CLAIM WHERE REASON_FOR_SERVICE_MGR_REQ IS NOT NULL;

   CURSOR INSPECTION_RESULT_ACPT_REC IS
      SELECT *
      FROM INSPECTION_RESULT WHERE ACCEPTANCE_REASON IS NOT NULL;

   CURSOR INSPECTION_FAILURE_REC IS
      SELECT *
      FROM INSPECTION_RESULT WHERE FAILURE_REASON IS NOT NULL;

   CURSOR RECOVERY_CLM_ACPT_REC IS
      SELECT *
      FROM RECOVERY_CLAIM WHERE REC_CLM_ACCPT_REASON IS NOT NULL;

   CURSOR RECOVERY_CLM_REJECT_REC IS
      SELECT *
      FROM RECOVERY_CLAIM WHERE REC_CLM_REJECT_REASON IS NOT NULL;
BEGIN
   FOR EACH_REC IN CLAIM_ACCPT_RSN_REC LOOP
      BEGIN
         FOR E IN GETLOVID(EACH_REC.ACCEPTANCE_REASON,'ACCEPTANCEREASON') LOOP
         UPDATE CLAIM
            SET ACCEPTANCE_REASON_NEW = E.ID
          WHERE ID = EACH_REC.ID;
		 END LOOP; 
      EXCEPTION
         WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE (SQLERRM);

      END;
   END LOOP;

   COMMIT;

   FOR EACH_REC IN CLAIM_REJECTION_RSN_REC LOOP
       BEGIN
         FOR E IN GETLOVID(EACH_REC.REJECTION_REASON,'REJECTIONREASON') LOOP
         UPDATE CLAIM
            SET REJECTION_REASON_NEW= E.ID
          WHERE ID = EACH_REC.ID;
		 	END LOOP; 
      EXCEPTION
         WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE (SQLERRM);
      END;
   END LOOP;

   COMMIT;

   FOR EACH_REC IN CLAIM_ACC_CODE_REC LOOP
      BEGIN
         FOR E IN GETLOVID(EACH_REC.ACCOUNTABILITY_CODE,'ACCOUNTABILITYCODE') LOOP
         UPDATE CLAIM
            SET ACCOUNTABILITY_CODE_NEW= E.ID
          WHERE ID = EACH_REC.ID;
		  END LOOP;
      EXCEPTION
         WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE (SQLERRM);
      END;
   END LOOP;

   COMMIT;

   FOR EACH_REC IN CLAIM_SMR_REC LOOP
       BEGIN
         FOR E IN GETLOVID(EACH_REC.ACCOUNTABILITY_CODE,'SMRREASON') LOOP
         UPDATE CLAIM
            SET REASON_FOR_SERVICE_MGR_REQ_NEW= E.ID
          WHERE ID = EACH_REC.ID;
		  	END LOOP;
      EXCEPTION
         WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE (SQLERRM);
      END;
   END LOOP;

   COMMIT;

   FOR EACH_REC IN INSPECTION_FAILURE_REC LOOP
      BEGIN
         FOR E IN GETLOVID(EACH_REC.FAILURE_REASON,'FAILUREREASON') LOOP
         UPDATE INSPECTION_RESULT
            SET FAILURE_REASON_NEW= E.ID
          WHERE ID = EACH_REC.ID;
		  	END LOOP;
      EXCEPTION
         WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE (SQLERRM);
      END;
   END LOOP;

   COMMIT;

   FOR EACH_REC IN INSPECTION_RESULT_ACPT_REC LOOP
      BEGIN
         FOR E IN GETLOVID(EACH_REC.ACCEPTANCE_REASON,'PARTACCEPTANCEREASON') LOOP
         UPDATE INSPECTION_RESULT
            SET PART_ACCEPTANCE_REASON_NEW= E.ID
          WHERE ID = EACH_REC.ID;
		  	END LOOP;
      EXCEPTION
         WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE (SQLERRM);
      END;
   END LOOP;

   COMMIT;

   FOR EACH_REC IN RECOVERY_CLM_ACPT_REC LOOP
     BEGIN
         FOR E IN GETLOVID(EACH_REC.REC_CLM_ACCPT_REASON,'RECOVERYCLAIMACCEPTANCEREASON') 

LOOP
         UPDATE RECOVERY_CLAIM
            SET REC_CLM_ACCPT_REASON_NEW= E.ID
          WHERE ID = EACH_REC.ID;
		  	END LOOP;
      EXCEPTION
         WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE (SQLERRM);
      END;
   END LOOP;

   COMMIT;

   FOR EACH_REC IN RECOVERY_CLM_REJECT_REC LOOP
       BEGIN
         FOR E IN GETLOVID(EACH_REC.REC_CLM_REJECT_REASON,'RECOVERYCLAIMREJECTIONREASON') 

LOOP
         UPDATE RECOVERY_CLAIM
            SET REC_CLM_REJECT_REASON_NEW= E.ID
          WHERE ID = EACH_REC.ID;
		  	END LOOP;
      EXCEPTION
         WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE (SQLERRM);
      END;
   END LOOP;

   COMMIT;
END;
/
BEGIN
UPDATE_CLAIMLOVCODE_TO_LOVID();
END;
/ 
ALTER TABLE claim DROP column ACCEPTANCE_REASON
/
ALTER TABLE claim DROP column ACCOUNTABILITY_CODE
/
ALTER TABLE claim DROP column REJECTION_REASON
/
ALTER TABLE claim DROP column REASON_FOR_SERVICE_MGR_REQ
/
ALTER TABLE RECOVERY_CLAIM DROP column REC_CLM_ACCPT_REASON
/
ALTER TABLE RECOVERY_CLAIM DROP column REC_CLM_REJECT_REASON
/
ALTER TABLE INSPECTION_RESULT DROP column ACCEPTANCE_REASON
/
ALTER TABLE INSPECTION_RESULT DROP column FAILURE_REASON
/
alter table claim rename column  acceptance_reason_new TO acceptance_reason
/
alter table claim rename column  Accountability_Code_new TO Accountability_Code
/
alter table claim rename column  rejection_reason_new TO rejection_reason
/
alter table claim rename column  reason_for_service_mgr_req_new TO reason_for_service_mgr_req
/
alter table recovery_claim rename column  rec_clm_accpt_reason_new TO rec_clm_accpt_reason
/
alter table recovery_claim rename column  rec_clm_reject_reason_new TO rec_clm_reject_reason
/
alter table inspection_result rename column  Failure_Reason_new TO Failure_Reason
/
alter table inspection_result rename column  Part_Acceptance_Reason_new TO Acceptance_Reason
/
ALTER TABLE CLAIM ADD CONSTRAINT CLAIM_ACCEPTANCEREASON_FK FOREIGN KEY (ACCEPTANCE_REASON) REFERENCES LIST_OF_VALUES(ID)
/
ALTER TABLE CLAIM ADD CONSTRAINT CLAIM_ACCOUNTABILITYCODE_FK FOREIGN KEY (ACCOUNTABILITY_CODE) REFERENCES LIST_OF_VALUES(id)
/
ALTER TABLE CLAIM ADD (
  CONSTRAINT CLAIM_REJECTIONREASON_FK 
 FOREIGN KEY (REJECTION_REASON) 
 REFERENCES LIST_OF_VALUES (id))
/
ALTER TABLE CLAIM ADD (
  CONSTRAINT CLM_REASONFORSERVICEMGRREQ_FK 
 FOREIGN KEY (REASON_FOR_SERVICE_MGR_REQ) 
 REFERENCES LIST_OF_VALUES(id))
/
ALTER TABLE RECOVERY_CLAIM ADD (
  CONSTRAINT RECCLAIM_RECCLMACCPTREASON_FK 
 FOREIGN KEY (REC_CLM_ACCPT_REASON) 
 REFERENCES LIST_OF_VALUES(id))
/
ALTER TABLE RECOVERY_CLAIM ADD (
  CONSTRAINT RECCLAIM_RECCLMREJECTREASON_FK 
 FOREIGN KEY (REC_CLM_REJECT_REASON) 
 REFERENCES LIST_OF_VALUES(id))
/
ALTER TABLE INSPECTION_RESULT ADD (
 CONSTRAINT INSPECTRESULT_ACCEPTREASON_FK 
 FOREIGN KEY (ACCEPTANCE_REASON) 
 REFERENCES LIST_OF_VALUES(id))
/
ALTER TABLE INSPECTION_RESULT ADD (
  CONSTRAINT INSPECTRESULT_FAILUREREASON_FK 
 FOREIGN KEY (FAILURE_REASON) 
 REFERENCES LIST_OF_VALUES(id))
/
ALTER TABLE DOMAIN_RULE ADD (
  CONSTRAINT DOMAIN_RULE_REJECTIONREASON_FK 
 FOREIGN KEY (REJECTION_REASON) 
 REFERENCES LIST_OF_VALUES(id))
/
  
