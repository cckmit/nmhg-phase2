--Purpose    : Added scripts for Payments as a part of 4.3 upgrade.
--Created On : 11-Oct-2010
--Created By : Kuldeep Patil
--Impact     : None
/* Commented because this has been moved to PATCH_PAYMENT_REFACTORING_DDL.sql*/
-- CREATE TABLE LINE_ITEM_GROUP_BACKUP
--AS
--(
--	SELECT
--	ID ,
--	TOTAL_AMT ,
--	TOTAL_CURR  ,
--	DISBURSED_AMT ,
--	DISBURSED_CURR  ,
--	COSTPRICE_AMT ,
--	COSTPRICE_CURR  ,
--	DLR_CLAIM_AMT ,
--	DLR_CLAIM_CURR  ,
--	TOTAL_DLR_CLAIM_AMT ,
--	TOTAL_DLR_CLAIM_CURR  ,
--	DISPLAY_AMT ,
--	DISPLAY_CURR ,
--	PERCENTAGE_ACCEPTANCE_FOR_CP
--	FROM LINE_ITEM_GROUP
--)
--/
--CREATE TABLE PAYMENT_BACKUP
--AS
--(
--	SELECT
--	ID,
--	PREVIOUS_PAID_AMOUNT_AMT  ,
--	PREVIOUS_PAID__AMOUNT_CURR,
--	CLAIMED_TOTAL_AMT,         
--	CLAIMED_TOTAL_CURR
--	FROM PAYMENT	
--)
--/
--CREATE TABLE PAYMENT_PREVIOUS_CREDIT_MEMOS_BACKUP
--AS
--(
--	SELECT * FROM PAYMENT_PREVIOUS_CREDIT_MEMOS
--)
--/
--CREATE TABLE PREVIOUS_PART_INFO_BACKUP
--AS
--(
--	SELECT * FROM PREVIOUS_PART_INFO
--)
--/
--CREATE TABLE LINE_ITEM_GROUP_AUDIT_BACKUP
--AS
--(
--	SELECT * FROM LINE_ITEM_GROUP_AUDIT
--)
--/
--CREATE TABLE PAYMENT_COMPONENT_BACKUP
--AS
--(
--	SELECT * FROM PAYMENT_COMPONENT
--)
--/
--CREATE TABLE PAYMENT_AUDIT_BACKUP
--AS
--(
--	SELECT * FROM PAYMENT_AUDIT
--)
--/
--CREATE TABLE MODIFIERS_BACKUP
--AS
--(
--	SELECT * FROM MODIFIERS
--)
--/
--COMMIT
--/
----Anonymous pl/sql block to populate payment and lineitemgroup.
--DECLARE
--	CURSOR ALL_REC
--	IS
--	SELECT * 
--	FROM LINE_ITEM_GROUP_AUDIT;
--
--	V_TMP_CLM_AUDIT_ID		NUMBER(19) := 0;
--	V_PAYMENT_ID			NUMBER(19);
--	V_LINE_ITEM_GRP_NAME	VARCHAR2(255);
--	V_LINE_ITEM_GROUP_ID	NUMBER(19);
--
--BEGIN
--
--	FOR EACH_REC IN ALL_REC
--	LOOP
--		BEGIN
--
--			IF EACH_REC.FOR_CLAIM_AUDIT <> V_TMP_CLM_AUDIT_ID THEN
--				-- This check is for unique claim_audit as claim_audit and line item group is one to many relationship
--				SELECT PAYMENT_SEQ.NEXTVAL
--				INTO V_PAYMENT_ID
--				FROM DUAL;
--
--				INSERT INTO PAYMENT(
--					ID,
--					D_CREATED_ON,
--					D_CREATED_TIME,
--					D_INTERNAL_COMMENTS,
--					D_UPDATED_ON,
--					D_UPDATED_TIME,
--					D_LAST_UPDATED_BY,
--					D_ACTIVE
--				) VALUES (
--					V_PAYMENT_ID,
--					SYSDATE,
--					SYSDATE,
--					'4.3 Upgrade',
--					SYSDATE,
--					SYSDATE,
--					56,
--					1
--				);
--
--				UPDATE CLAIM_AUDIT 
--				SET PAYMENT = V_PAYMENT_ID 
--				WHERE ID = EACH_REC.FOR_CLAIM_AUDIT;
--
--			END IF;
--
--			--Insert into line item group and get the name from line item group by passing corresponding id with line item group audit.
--			SELECT LINE_ITEM_GROUP_SEQ.NEXTVAL
--			INTO V_LINE_ITEM_GROUP_ID
--			FROM DUAL;
--
--			SELECT NAME 
--			INTO V_LINE_ITEM_GRP_NAME 
--			FROM LINE_ITEM_GROUP 
--			WHERE ID = EACH_REC.FOR_LINE_ITEM_GRP;
--
--			INSERT INTO LINE_ITEM_GROUP
--			(
--				ID,
--				NAME,
--				D_CREATED_ON,
--				D_CREATED_TIME,
--				D_INTERNAL_COMMENTS,
--				D_UPDATED_ON,
--				D_UPDATED_TIME,
--				D_LAST_UPDATED_BY,
--				D_ACTIVE,
--				PERCENTAGE_ACCEPTANCE,
--				VERSION
--			) VALUES (
--				V_LINE_ITEM_GROUP_ID,
--				V_LINE_ITEM_GRP_NAME,
--				SYSDATE,
--				SYSDATE,
--				'4.3 Upgrade',
--				SYSDATE,
--				SYSDATE,
--				56,
--				1,
--				EACH_REC.PERCENTAGE_ACCEPTANCE,
--				1
--			);
--
--			--Insert record into line item groups table for payment line item group mapping
--			INSERT INTO LINE_ITEM_GROUPS(
--				FOR_PAYMENT,
--				LINE_ITEM_GROUPS
--			) VALUES(
--				V_PAYMENT_ID,
--				V_LINE_ITEM_GROUP_ID
--			);
--			
--			UPDATE modifiers
--			set 
--			where LINE_ITEM_GROUP_
--		END;
--		V_TMP_CLM_AUDIT_ID := EACH_REC.FOR_CLAIM_AUDIT;
--
--	END LOOP;
--
--	--Kuldeep - Put logic to update amounts into Payment, Line Item group table.
--
--	COMMIT;
--	
--	EXCEPTION WHEN OTHERS THEN
--	ROLLBACK;
--END;
--/
----end of procedure
--DROP TABLE "PAYMENT_PREVIOUS_CREDIT_MEMOS" CASCADE CONSTRAINTS
--/
--DROP TABLE "PREVIOUS_PART_INFO" CASCADE CONSTRAINTS
--/
--DROP TABLE "LINE_ITEM_GROUP_AUDIT" CASCADE CONSTRAINTS
--/
--DROP TABLE "PAYMENT_COMPONENT" CASCADE CONSTRAINTS
--/
--DROP TABLE "PAYMENT_AUDIT" CASCADE CONSTRAINTS
--/
--DROP TABLE LINE_ITM_GRP_AUDIT_SLT_DTL_BACKUP
--/
--COMMIT
--/
--ALTER TABLE LINE_ITEM_GROUP 
--DROP COLUMN "TOTAL_AMT"
--/
--ALTER TABLE LINE_ITEM_GROUP 
--DROP COLUMN "TOTAL_CURR"
--/
--ALTER TABLE LINE_ITEM_GROUP 
--DROP COLUMN "DISBURSED_AMT"
--/
--ALTER TABLE LINE_ITEM_GROUP 
--DROP COLUMN "DISBURSED_CURR"
--/
--ALTER TABLE LINE_ITEM_GROUP 
--DROP COLUMN "COSTPRICE_AMT"
--/
--ALTER TABLE LINE_ITEM_GROUP 
--DROP COLUMN "COSTPRICE_CURR"
--/
--ALTER TABLE LINE_ITEM_GROUP 
--DROP COLUMN "DLR_CLAIM_AMT"
--/
--ALTER TABLE LINE_ITEM_GROUP 
--DROP COLUMN "DLR_CLAIM_CURR"
--/
--ALTER TABLE LINE_ITEM_GROUP 
--DROP COLUMN "TOTAL_DLR_CLAIM_AMT"
--/
--ALTER TABLE LINE_ITEM_GROUP 
--DROP COLUMN "TOTAL_DLR_CLAIM_CURR"
--/
--ALTER TABLE LINE_ITEM_GROUP 
--DROP COLUMN "DISPLAY_AMT"
--/
--ALTER TABLE LINE_ITEM_GROUP 
--DROP COLUMN "DISPLAY_CURR"
--/
--ALTER TABLE LINE_ITEM_GROUP 
--DROP COLUMN "PERCENTAGE_ACCEPTANCE_FOR_CP"
--/
--ALTER TABLE PAYMENT 
--DROP COLUMN "PREVIOUS_PAID_AMOUNT_AMT"
--/
--ALTER TABLE PAYMENT 
--DROP COLUMN "PREVIOUS_PAID__AMOUNT_CURR"
--/
--ALTER TABLE PAYMENT 
--DROP COLUMN "CLAIMED_TOTAL_AMT"
--/
--ALTER TABLE PAYMENT 
--DROP COLUMN "CLAIMED_TOTAL_CURR"
--/
COMMIT
/